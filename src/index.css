@import "tailwindcss";

body {
    background-color: #0f172a;
    /* slate-900 */
    color: #f1f5f9;
    /* slate-100 */
}

/* Custom scrollbar styles (Webkit-based browsers) */
.scrollbar-thin::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

.scrollbar-thumb-slate-700::-webkit-scrollbar-thumb {
    background-color: #334155;
    /* slate-700 */
    border-radius: 10px;
    border: 2px solid transparent;
    /* Cor do track para dar padding */
    background-clip: padding-box;
}

.hover\:scrollbar-thumb-slate-600::-webkit-scrollbar-thumb:hover {
    background-color: #475569;
    /* slate-600 */
}

.scrollbar-track-transparent::-webkit-scrollbar-track {
    background: transparent;
}

/* Para Firefox (mais limitado) */
.scrollbar-thin {
    scrollbar-width: thin;
    scrollbar-color: #334155 transparent;
    /* thumb track */
}

.hover\:scrollbar-thumb-slate-600:hover {
    /* O hover no thumb é mais difícil de controlar no Firefox com CSS puro */
    /* Geralmente o scrollbar-color já define o thumb e o track */
}

/* Estilo para desabilitar o scroll do body quando a sidebar mobile está aberta */
/* Esta classe é adicionada ao body em App.tsx */
body.mobile-sidebar-open {
  overflow: hidden;
}

main {
    max-width: 100vw;
}

/* Se você estivesse usando margem fixa para o ChatArea no desktop, precisaria de algo assim: */
/*
@media (min-width: 768px) {
  body:not(.desktop-sidebar-collapsed) .chat-area-wrapper {
    margin-left: 288px; *//* desktop expanded width */
/*  }
  body.desktop-sidebar-collapsed .chat-area-wrapper {
    margin-left: 72px; *//* desktop collapsed width */
/*  }
}
*/

/* Como no código App.tsx atual a ChatArea está dentro de um div flex-1
   e a Sidebar mobile usa position fixed/absolute e z-index,
   você NÃO precisa das classes desktop-sidebar-collapsed no body nem da margem no .chat-area-wrapper.
   O flexbox cuida do espaço.
   A única classe necessária no body para o comportamento do modal é `mobile-sidebar-open`. */